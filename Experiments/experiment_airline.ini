[inference]
# models need to be registered
# needs to be a valid inference string for venture,or a stub indicating handwritten or matlab inference.
# Every inference string is only one iteration (so that we can do stuff with it without having to
# rely on ventures collecting mechanisms. The actual number of interations is controlled by what comes after the colon.
# every single model must have at least one exerperimental setting for inference, more than one can be in
# indicated with ';'.
# commas indicate more than one infer statement, in the ordered that is supplied
# Todo: need to break down cycles so that we can easily collect was i happening inside a cycle

#venture-cov-learning-airline=(do (mh (quote grammar) one 1) (repeat 1 (do (mh (quote parameter) one 10))) ):1
#venture-cov-learning-unif-airline=(do (mh (quote grammar) one 1) (repeat 1 (do (mh (quote parameter) one 10))) ):1

venture-cov-learning-airline=(do (mh (quote grammar) one 1) (repeat 1 (do (mh (quote parameter) one 10))) ):1
#venture-cov-learning-unif-airline=(do (mh (quote grammar) one 1) (repeat 1 (do (mh (quote parameter) one 10))) ):1
#venture-cov-learning-unif-gamma=(mh (quote grammar) one 1):1,(mh (quote hypers) one 1):1,(mh (quote parameter) one 1):10
[test-data]

# test-problem needs to be registered in run_experiment.py
test-problems=real_world_airline
data-points=real
observation_noise=real

[MCMC]
total-steps-outer = 2000

[others]
repeat=144
#,function-per
#,GP-PER
# test points for residuals
number-test-points=10

