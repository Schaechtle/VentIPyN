[inference]
# models need to be registered
# needs to be a valid inference string for venture,or a stub indicating handwritten or matlab inference.
# Every inference string is only one iteration (so that we can do stuff with it without having to
# rely on ventures collecting mechanisms. The actual number of interations is controlled by what comes after the colon.
# every single model must have at least one exerperimental setting for inference, more than one can be in
# indicated with ';'.
# commas indicate more than one infer statement, in the ordered that is supplied
# Todo: need to break down cycles so that we can easily collect was i happening inside a cycle

#venture-gp-LIN=(mh (quote parameter) one 1):1
#venture-gp-PER=(mh (quote parameter) one 1):1,(mh (quote grammar) one 1):1,(mh (quote hypers) one 1):1
#venture-cov-learning-testing=(mh (quote parameter) one 1):10,(mh (quote grammar) one 1):1

#venture-cov-learning-airold=(do (mh (quote grammar) one 1) (repeat 1 (do (mh (quote parameter) one 10))) ):1
#venture-cov-learning-unif-co2=(do (mh (quote grammar) one 1) (repeat 1 (do (mh (quote parameter) one 10))) ):1
#venture_cov_simple_selinper=(do (repeat 10 (do (mh (quote parameter) one 1))) (mh (quote grammar) one 1)):1
#venture-cov-learning=(do (repeat 10 (do (mh (quote parameter) one 1))) (mh (quote grammar) one 1)):1
#venture-cov-learning=(mh (quote parameter) one 1):10,(mh (quote grammar) one 1):1
#test_model=no_inference


venture-cov-learning-cp=ds(covariance_label cov_structure):5,(mh (quote grammar) one 1):5
#venture-cov-learning-smart=ds(covariance_label cov_structure):10,(mh (quote grammar) one 1):1

[test-data]
data-points= na
observation_noise= na
# test-problem needs to be registered in run_experiment.py
test-problems=real_world_airline-s,real_world_mauna-s,real_world_solar-s

[MCMC]
total-steps-outer = 5000

[others]
#repeat=545
repeat = 100
#,function-per
#,GP-PER
# test points for residuals
number-test-points=1
